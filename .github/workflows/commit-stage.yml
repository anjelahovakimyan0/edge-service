name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: edge-service
  GITHUB_USERNAME: anjelahovakimyan0

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build, unit tests and integration tests
        run: |
          chmod +x gradlew
          ./gradlew build
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Validate Kubernetes manifests
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.28.3
          kubeval: 0.16.1
          # Different schema required because of https://github.com/instrumenta/kubeval/issues/301
          command: |
            kubeval --strick --schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master -d k8s
        continue-on-error: true
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build container image
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage --no-build-cache
      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          fail-build: false
          severity-cutoff: high
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif-file: ${{ steps.scan.outputs.sarif }}
        continue-on-error: true
      - name: Publish container image
        run: |
          docker login ${{ env.REGISTRY }} -u ${{ env.GITHUB_USERNAME }} -p ${{ secrets.TOKEN_GITHUB }}
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.GITHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.GITHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest